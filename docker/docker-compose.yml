version: '3.8'

services:
  trading-advisor:
    build:
      context: ..
      dockerfile: docker/Dockerfile
      target: production
    container_name: ai-trading-advisor
    restart: unless-stopped
    environment:
      - DEBUG_MODE=false
      - LOG_LEVEL=INFO
      - DATABASE_PATH=/app/data/trading_advisor.db
      - LOG_FILE=/app/logs/trading_advisor.log
    volumes:
      # Mount data directories for persistence
      - ../data:/app/data
      - ../models:/app/models
      - ../logs:/app/logs
      - ../config:/app/config
      # Mount API keys (read-only)
      - ../config/api_keys.env:/app/config/api_keys.env:ro
    ports:
      - "8080:8080"  # Web interface port
    networks:
      - trading-network
    healthcheck:
      test: ["CMD", "python", "-c", "import sys; sys.exit(0)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Development service with additional tools
  trading-advisor-dev:
    build:
      context: ..
      dockerfile: docker/Dockerfile
      target: builder
    container_name: ai-trading-advisor-dev
    restart: unless-stopped
    environment:
      - DEBUG_MODE=true
      - LOG_LEVEL=DEBUG
      - DATABASE_PATH=/app/data/trading_advisor.db
      - LOG_FILE=/app/logs/trading_advisor.log
    volumes:
      # Mount source code for development
      - ../src:/app/src
      - ../data:/app/data
      - ../models:/app/models
      - ../logs:/app/logs
      - ../config:/app/config
      - ../tests:/app/tests
      - ../scripts:/app/scripts
      # Mount API keys (read-only)
      - ../config/api_keys.env:/app/config/api_keys.env:ro
    ports:
      - "8081:8080"  # Different port for development
    networks:
      - trading-network
    profiles:
      - dev
    command: ["python", "-m", "pytest", "tests/", "-v"]

  # Database service (if using external database in future)
  # db:
  #   image: postgres:15-alpine
  #   container_name: trading-db
  #   restart: unless-stopped
  #   environment:
  #     - POSTGRES_DB=trading_advisor
  #     - POSTGRES_USER=trading_user
  #     - POSTGRES_PASSWORD=trading_password
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   networks:
  #     - trading-network
  #   profiles:
  #     - external-db

networks:
  trading-network:
    driver: bridge
    name: trading-network

volumes:
  postgres_data:
    driver: local

# Development overrides
x-dev-overrides: &dev-overrides
  environment:
    - DEBUG_MODE=true
    - LOG_LEVEL=DEBUG
  volumes:
    - ../src:/app/src
    - ../tests:/app/tests
    - ../scripts:/app/scripts

# Production overrides
x-prod-overrides: &prod-overrides
  environment:
    - DEBUG_MODE=false
    - LOG_LEVEL=WARNING
  restart: always
  deploy:
    resources:
      limits:
        memory: 2G
        cpus: '1.0' 